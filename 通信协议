文本搜索关键字：

IIC


UART


SPI


#####CAN总线物理层原理
一、总线的概念
总线是是一组用于计算机之间、各部件之间进行数据传输和命令传送的公用信号线；

二、总线的分类（按照功能和规范可以分为三大类型）
片总线（Chip Bus, C-Bus）又称为元件级总线，是把各种不同的芯片连接到一起构成特定功能模块（如CPU模块）的信息传输通路。

内总线（Internal Bus, I-Bus）又称为系统总线或板级总线，是微机系统中各模块之间的信息传输通路。例如CPU模块和存储区模块或I/O接口模块之间的传输通路。

外总线（External Bus, E-Bus）又称为通信总线，是微机系统之间或微机系统与其他系统（仪器、仪表、控制装置等）之间传输信息的通路，如RS-232，RS-485，现场总线CAN属于外总线；

image.png

好了，通过上述的知识点回顾，我们可以对今天的主角“CAN”总线有个大致定位。前边提到，CAN属于外总线，同时亦是现场总线，现场总线是当今自动化领域技术发展的热点之一，被誉为自动化领域的计算机局域网，汽车中使用的LIN总线、CAN总线等均属于现场总线。

三、CAN总线起源

1986 年 2 月，Robert Bosch 公司在 SAE（汽车工程协会）大会上介绍了一种新型的串行总线——CAN控制器局域网，那是 CAN 诞生的时刻。今天，在欧洲几乎每一辆新客车均装配有 CAN 局域网。同样，CAN也用于其他类型的交通工具，从火车到轮船或者用于工业控制。CAN 已经成为全球范围内最重要的总线之一 —— 甚至领导着串行总线。

CAN发源于汽车领域，我们看看汽车中CAN是怎样的存在，如下图：

image.png


四、CAN 基本知识 
1. 什么是 CAN ? 
CAN，全称为“Controller Area Network”，即控制器局域网，是国际上应用最广泛的现场总线之一。最初，CAN 被设计作为汽车环境中的微控制器通讯，在车载各电子控制装置 ECU 之间交换信息，形成汽车电子控制网络。比如：发动机管理系统、变速箱控制器、仪表装备、电子主干系统中，均嵌入 CAN 控制装置。一个由 CAN 总线构成的单一网络中，理论上可以挂接无数个节点。实际应用中，节点数目受网络硬件的电气特性所限制。例如，当使用 Philips P82C250 作为 CAN 收发器时，同一网络中允许挂接 110 个节点。CAN 可提供高达 1Mbit/s 的数据传输速率，这使实时控制变得非常容易。另外，硬件的错误检定特性也增强了 CAN 的抗电磁干扰能力。 

2. CAN 是怎样发展起来的？ 
CAN 最初出现在 80 年代末的汽车工业中，由德国 Bosch 公司最先提出。当时，由于消费者对于汽车功能的要求越来越多，而这些功能的实现大多是基于电子操作的，这就使得电子装置之间的通讯越来越复杂，同时意味着需要更多的连接信号线。提出 CAN 总线的最初动机就是为了解决现代汽车中庞大的电子控制装置之间的通讯，减少不断增加的信号线。于是，他们设计了一个单一的网络总线，所有的外围器件可以被挂接在该总线上。1993 年，CAN 已成为国际标准 ISO11898(高速应用)和 ISO11519（低速应用）。

CAN 是一种多主方式的串行通讯总线，基本设计规范要求有高的位速率，高抗电磁干扰性，而且能够检测出产生的任何错误。当信号传输距离达到 10Km 时，CAN 仍可提供高达 50Kbit/s 的数据传输速率。 由于 CAN 总线具有很高的实时性能，因此，CAN 已经在汽车工业、航空工业、工业控制、安全防护等领域中得到了广泛应用。 

3. CAN 是怎样工作的？ 
CAN 通讯协议主要描述设备之间的信息传递方式。CAN 层的定义与开放系统互连模型（OSI）一致。每一层与另一设备上相同的那一层通讯。实际的通讯发生在每一设备上相邻的两层，而设备只通过模型物理层的物理介质互连。CAN 的规范定义了模型的最下面两层：数据链路层和物理层。下表中展示了 OSI 开放式互连模型的各层。应用层协议可以由 CAN 用户定义成适合特别工业领域的任何方案。

image.png





五、CAN物理层
CAN 能够使用多种物理介质，例如双绞线、光纤等。最常用的就是双绞线。信号使用差分电压传送，两条信号线被称为“CAN_H”和“CAN_L”，静态时均是 2.5V 左右，此时状态表示为逻辑“1”，也可以叫做“隐性”。用 CAN_H 比 CAN_L 高表示逻辑“0”，称为“显形”，此时，通常电压值为：CAN_H = 3.5V 和 CAN_L = 1.5V 。

差分信号：振幅相等，相位相反的信号，与单端信号进行比较理解差分信号的有点，先说缺点：会增加一个线；

image.png


下图为CAN总线网络示意图，节点主要包括Host、控制器和收发器。Host常集成有CAN控制器，CAN控制器负责处理协议相关功能，以减轻Host的负担。CAN收发器将控制器连接到传输媒介。通常控制器和总线收发器通过光耦或磁耦隔离，这样即使总线上过压损坏收发器，控制器和Host设备也可以得到保护。

技术分享图片


1. CAN收发器
CAN总线分高速CAN和低速CAN，收发器也分为高速CAN收发器（1Mbps）和低速CAN收发器（125Kbps）。低速CAN也叫Fault Tolerance CAN(容错CAN)，指的是即使总线上一根线失效，总线依然可以通信。该模块的作用类似于串口中的MAX3232用作电平转换，CAN收发器的作用则是把逻辑信号转换为差分信号。

高速CAN

图片来自外部，暂时无法显示

低俗容错CAN

图片来自外部，暂时无法显示

技术分享图片

与I2C一样，CAN总线也是遵循的“线与”机制；显性”位可以覆 盖“隐性”位；只有所有节点都发 送“隐性”位， 总线才处于“隐性” 状态。这种“线与”机制使CAN总线呈现显性优先的特性。

图片来自外部，暂时无法显示

在发送数据时，CAN控制器把要发送的二进制编码通过CAN_Tx线发送到CAN收发器，然后由收发器把这个普通的逻辑电平信号转化成差分信号，通过差分线CAN_High和CAN_Low输出到CAN总线网络。接收数据过程，相反。采用差分信号，可以取得更好的电磁兼容效果。因此，CAN总线物理传输媒介只需要两根线。

高速CAN总线最高信号传输速率为1Mbps，支持最长距离40m。ISO11898-2要求在高速CAN总线两段安装端接电阻RL（端接电阻一般为120Ω，因为电缆的特性阻抗为120 Ω，为了模拟无限远的传输线。）以消除反射。低速CAN最高速度只有125Kbps，所以ISO11898-3没有端接要求。

image.png

技术分享图片

因为传输距离越大，信号时延也越大，为了保证消息的正确采样，总线上的信号速率相应也要下降。下图是推荐的信号速率与距离的关系。

技术分享图片




2. 什么是 CSMA/CD ? 
CSMA/CD 是“载波侦听多路访问/冲突检测”（Carrier Sense Multiple Access with Collision Detect）的缩写。 利用 CSMA 访问总线，可对总线上信号进行检测，只有当总线处于空闲状态时，才允许发送。利用这种方法，可以允许多个节点挂接到同一网络上。当检测到一个冲突位时，所有节点重新回到‘监听’总线状态，直到该冲突时间过后，才开始发送。在总线超载的情况下，这种技术可能会造成发送信号经过许多延迟。为了避免发送时延，可利用 CSMA/CD 方式访问总线。当总线上有两个节点同时进行发送时，必须通过“无损的逐位仲裁”方法来使有最高优先权的的报文优先发送。在 CAN 总线上发送的每一条报文都具有唯一的一个 11 位或 29 位数字的 ID。CAN 总线状态取决于二进制数‘0’而不是‘1’，所以 ID 号越小，则该报文拥有越高的优先权。因此一个为全‘0’标志符的报文具有总线上的最高级优先权。可用另外的方法来解释：在消息冲突的位置，第一个节点发送 0 而另外的节点发送 1，那么发送 0 的节点将取得总线的控制权，并且能够成功的发送出它的信息。

3. 什么是标准格式 CAN 和扩展格式 CAN?
标准 CAN 的标志符长度是 11 位，而扩展格式 CAN 的标志符长度可达 29 位。CAN 协议的 2.0A 版本规定 CAN 控制器必须有一个 11 位的标志符。同时，在 2.0B 版本中规定，CAN 控制器的标志符长度可以是 11 位或 29 位。遵循 CAN2.0B 协议的 CAN 控制器可以发送和接收 11 位标识符的标准格式报文或 29 位标识符的扩展格式报文。如果禁止 CAN2.0B,则 CAN 控制器只能发送和接收 11 位标识符的标准格式报文，而忽略扩展格式的报文结构，但不会出现错误。目前，Philips 公司主要推广的 CAN 独立控制器均支持 CAN2.0B 协议，即支持 29 位标识符的扩展格式报文结构。

4. 报文冲突的处理
如前所说 CAN 的一个基本特征是越低的报文编号 （号码） 其优先权越高——一个标识符如果全部是“0”的话，那么它具有最高优先权。因而，两个节点同时开始传送报文，第一个发送零而另一个发送 “1” 的话那么发送零的那个就能够先分配到 CPU 并完成报文发送。这种“非破坏性的逐位 ”仲裁与每一个节点都可以监控自己发送的能力联合使用。因而如果一个发送器 A 被另一个发送器 B 发送有更高优先权的报文支配 overrule 回读的报文和 A 企图发送的报文不一致 A 将暂停发送。一旦总线空闲，另一个请求就会马上发送。这是第一层的部分功能，它完全包含在 CAN 控制器里。因此它对 CAN 用户来说是透明的。

image.png

CAN 总线物理层通常是双绞线。当逻辑“1”被写进总线里，两条线的电平是 2.5V，并被定义为 “隐性 ”位 当逻辑“0”被写进总线里，一条线被上拉到为 5V（CAN 高）另一条线被下拉到地 CAN 低这叫做“显形”位，但是如果显形位和隐性位都被不同的节点同时写进总线里，总线显示“显形”位，所以显性位覆盖了隐性位，这些都是 CAN 网络冲突检测的基础。


#####CAN总线数据链路层原理
在SPI通信中，片选、时钟信号、数据输入及数据输出这四个信号都有单独的信号线。而CAN使用的是两条差分信号线，只能表达一个信号。简洁的物理层决定了CAN必然要配上一套更为复杂的协议。如何用一个信号通道实现同样甚至更强大的功能，答案就是对数据或操作命令进行打包。


1. 通信机制——多主机（Multi-Master）

安全敏感的应用（如汽车动力）对通信系统的可靠性要求很高。将总线能否正常工作归结到单一节点是非常危险的，比较合理的方案是对总线接入的去中心化，即每个节点都有接入总线的能力。这也是CAN总线采用多主控（Multi-Master）线性拓扑结构的原因。

在CAN总线上，每个节点都有往总线上发送消息的能力，而消息的发送不必遵从任何预先设定的时序，通信是事件驱动的。只有当有新的信息传递时，CAN总线才处于忙碌的状态，这使得节点接入总线速度非常快。CAN总线理论最高数据传输速率为1Mbps，对于异步事件反应迅速，基本对于ms级别的实时应用没有任何问题。

2. 寻址机制

不同于其它类型的总线，CAN总线不设定节点的地址，而是通过消息的标识符（Identifier）来区别消息。这种机制虽然会增加消息的复杂度（增加标识符），但是节点在此情况下可以无需了解其他节点的状况，而相互间独立工作。在总线上增加节点时仅需关注消息类型，而非系统上其他节点的状况。这种以消息标识符寻址的方式，让总线上增加节点变得更加灵活。


3. 总线访问CSMA/CD+AMP

CAN总线通信原理可简单描述为多路载波侦听+基于消息优先级的冲突检测和非破坏性的仲裁机制（CSMA/CD+AMP）。CSMA（Carrie Sense Multiple Access）指的是所有节点必须都等到总线处于空闲状态时才能往总线上发送消息；CD+AMP（Collision Detection + Arbitration on Message Priority）指的是如果多个节点往总线上发送消息时，具备最高优先级的消息获得总线。

多路载波侦听：网络上所有节点以多点接入的方式连接在同一根总线上，且发送数据是广播式的。网络上各个节点在发送数据前都要检测总线上是否有数据传输：若网络上有数据，暂时不发送数据，等待网络空闲时再发；若网络上无数据，立即发送已经准备好的数据。

冲突检测：节点在发送数据时，要不停的检测发送的数据，确定是否与其他节点数据发送冲突，如果有冲突，则保证优先级高的报文先发送。

非破坏性仲裁机制：通过ID仲裁，ID数值越小，报文优先级越高。

image.png

发送低优先级报文的节点退出仲裁后，在下次总线空闲时自动重发报文。

image.png

高优先级的报文不能中断低优先级报文的发送。

image.png

4. 报文接收过滤
CAN控制器大多具有根据ID过滤报文的功能，即只接收某些ID的报文。节点对接收到的报文进行过滤：比较消息ID与选择器（Accepter）中和接受过滤相关位是否相同。如果相同，接收；如果不相同，则过滤。

image.png
在原始数据段的前面加上传输起始标签、片选（识别）标签、控制标签，在数据的尾段加上CRC校验标签、应答标签和传输结束标签。把这些内容按特定的格式打包好，就可以用一个通道表达各种信号了。各种各样的标签，起到了协同传输的作用。当整个数据包被传输到其他设备时，只要这些设备按格式去解读，就能还原出原始数据。类似这样的数据包就被称为CAN的数据帧。为了更有效的控制通信，CAN一共规定了5中类型的帧，帧也称为报文。

5. 帧类型：

报文传输由以下 4 个不同的帧类型所表示和控制：

- 数据帧：数据帧携带数据从发送器至接收器。

- 远程帧：总线单元发出远程帧，请求发送具有同一识别符的数据帧。

- 错误帧：任何单元检测到一总线错误就发出错误帧。

- 过载帧：过载帧用以在先行的和后续的数据帧（或远程帧）之间提供一附加的延时。

- 帧间隔：用于将数据帧及远程帧与前面的帧分离开来的帧。

5.1 数据帧
数据帧在CAN通信中最主要，也最复杂。数据帧以一个显性位（逻辑0）开始，以7个连续的隐性位（逻辑1）结束。CAN总线的数据帧有标准格式（Standard Format）和扩展格式（ExtendedFormat）的区分。

技术分享图片


上图展示了标准数据帧（Standard）和扩展数据帧（Extended）两种格式。各字段定义及长度分别为：

SOF：表示数据帧开始；（1 bit）

Identifier：标准格式11 bit，扩展格式29 bit包括Base Identifier（11 bit）和Extended Identifier（18 bit），该区段标识数据帧的优先级，数值越小，优先级越高；

RTR：远程传输请求位，0时表示为数据帧，1表示为远程帧，也就是说RTR=1时，消息帧的Data Field为空；（1 bit）

IDE： 标识符扩展位，0时表示为标准格式，1表示为扩展格式；（1 bit）

DLC：数据长度代码，0~8表示数据长度为0~8 Byte；（4 bit）

Data Field：数据域；（0~8 Byte）

CRC Sequence：校验域，校验算法G(x) = x15 + x14 + x10 + x8 + x7 + x4 + x3 + 1；（15 bit）

DEL：校验域和应答域的隐性界定符；（1 bit）

ACK：应答，确认数据是否正常接收，所谓正常接收是指不含填充错误、格式错误、 CRC 错误。发送节点将此位为1，接收节点正常接收数据后将此位置为0；（1 bit）

SRR：替代远程请求位，在扩展格式中占位用，必须为1；（1 bit）

EOF：连续7个隐性位（1）表示帧结束；（7 bit）

ITM：帧间空间，Intermission (ITM)，又称Interframe Space (IFS)，连续3个隐性位，但它不属于数据帧。帧间空间是用于将数据帧和远程帧与前面的帧分离开来的帧。数据帧和远程帧可通过插入帧间空间将本帧与前面的任何帧（数据帧、遥控帧、错误帧、过载帧）分开。过载帧和错误帧前不能插入帧间空间。



接下来，我们一起看一下数据帧中每一位具体代表的意思。


image.png


数据帧可以分为七段：

5.1.1 帧起始（SOF）

标识一个数据帧的开始，固定一个显性位。

image.png

用于同步， 总线空闲期间的任何隐性到显性的跳变都将引起节点进行硬同步。只有总线在空闲期间节点才能够发送SOF。

5.1.2 仲裁段（Arbitration Field）

仲裁段的内容主要为本数据帧的ID信息。数据帧分为标准格式和扩展格式两种，区别就在于ID信息的长度：标准格式的ID为11位；扩展格式为29位。在CAN协议中，ID决定着数据帧发送的优先级，也决定着其他设备是否会接收这个数据帧。

image.png


仲裁段除了报文ID外，还有RTR, IDE, SRR位。

5.1.3 控制段

在控制段，r1（reserved1）和r0（reserved0）为保留位，默认设置为显性位。最主要的是DLC（Data Length Code）段，它是用二进制编码表示本报文中的数据段包含多少个字节。DLC段由4位组成，DLC3−DLC0，表示的数字为0-8.

image.png
image.png


5.1.4 数据段

数据帧的核心内容，有0-8个字节长度，由DLC确定。

image.png

5.1.5 CRC段

为了保证报文的正确传输，CAN的报文包含了一段15位的CRC校验码，一旦接收端计算出的CRC码跟接收到的CRC码不同，就会向发送端反馈出错信息以及重新发送。CRC部分的计算和出错处理一般由CAN控制器硬件完成，或由软件控制最大重发数。

在CRC校验码之后，有一个CRC界定符，它为隐性位，主要作用是把CRC校验码与后面的ACK段隔开。





5.1.5 ACK段

包含确认位（ACK slot）和界定符（Delimiter, DEL）。ACK在发送节点发送时，为隐性位。当接收节点正确接收到报文时，对其用显性位覆盖。DEL界定符同样为隐性位，用于隔开。





5.1.6 帧结束段（End-of-Frame, EOF）

帧结束段由发送端发送7个隐性位表示结束。







6. 同步

CAN总线使用位同步的方式来确保通信时序，以及对总线的电平进行正确采样。

6.1 位时序

在讲位时序之前，先介绍几个基本概念。

6.2 Time Quantum 时间份额tQ ：CAN控制器工作的最小时间单位，通常对系统时钟分频得到。



6.3 波特率：单位时间内（1s）传输的数据位，公式：1/位时间。举个例子，系统时钟频率36MHz，预分频因子为4，则CAN时钟频率9MHz，则Tq=1/9M。假设一个CAN位包含10个Tq，则一个位周期T=10Tq，从而波特率为1/T=0.9MHz.



为了实现位同步，CAN协议把每一位的时序分解成下图所示的四段。这四段的长度加起来即为一个CAN数据位的长度。一个完整的位由8-25个Tq组成。



6.4 同步段（SS，Synchronization Segment）

一个位的输出从同步段开始。若总线的跳变沿被包含在SS段的范围之内，则表示节点与总线的时序同步。节点与总线同步时，采样点采集到的总线电平即可被确定为该电平的电位。SS段的大小为1Tq。

6.5 传播段（PTS，Propagation Time Segment）

用于补偿信号在网络和节点传播的物理延时时间，是总线上输入比较器延时和输出驱动器延时总和的两倍。通常1-8Tq。

6.6 相位缓冲段1（PBS1， Phase Buffer Segment 1）

主要用于补偿边沿阶段的误差，其时间长度在重新同步时可以加长。初始大小1-8Tq。

6.7 相位缓冲段2（PBS2，Phase Buffer Segment 2）

也是用于补偿边沿阶段的误差，其时间长度在重新同步时可以缩短。初始大小2-8Tq。

CAN同步分为硬同步和重新同步。

同步规则：

一个位时间内只允许一种同步方式；

任何一个“隐性”到“显性”的跳变都可用于同步；

硬同步发生在SOF阶段，所有接收节点调整各自当前位的同步段，使其位于发送的SOF位内；

重新同步发生在一个帧的其他阶段，即当跳变沿落在同步段之外；

硬同步

当总线上出现帧起始信号（SOF，即隐性到显性的边沿）时，其他节点的控制器根据总线上的这个下降沿对自己的位时序进行调整，把该下降沿包含到SS段内。这样根据起始帧来进行的同步称为硬同步。

可以看到在总线出现帧起始信号时，该节点原来的位时序与总线时序不同步，因而这个状态的采样点采集到的数据是不正确的。所以节点以硬同步的方式调整，把自己的位时序中的SS段平移至总线出现下降沿的部分，获得同步，这时采样点采集到的数据是正确数据。



同步前


同步后

重新同步

因为硬同步时只是在有帧起始信号时起作用，无法确保后续一连串的位时序都是同步的，所以CAN引入了重新同步的方式。在检测到总线上的时序与节点使用的时序有相位差时（即总线上的跳变沿不在节点时序的SS段范围），通过延长PBS1段或缩短PBS2段来获得同步，这样的方式称为重新同步。

分两种情况：第一种， 节点从总线的边沿跳变中，检测到它的时序比总线的时序相对滞后2个Tq，这是控制器在下一个时序中的PBS1段增加2Tq的时间长度，使得节点与总线时序重新同步。



第二种，节点从总线的边沿跳变中，检测到它的时序相对超前2Tq，这时控制器在前一个位时序中的PBS2段减少2Tq的时间长度，获得同步。



在重新同步的时候，PBS1和PBS2段的允许加长或缩短的时间长度定义为，重新同步补偿宽度（SJW，reSynchronization Jump Width）。这里设置的PBS1和PBS2能够增减的最大时间长度SJW=2Tq，若SJW设置的太小则重新同步的调整速度慢，若太大，则影响传输速率。
